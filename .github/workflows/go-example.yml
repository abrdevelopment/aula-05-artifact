name: Go Example
env:
  FILE_NAME: "hello-server"
on: 
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * 1-6'
jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      # Copy the code of repository and prepare to use on Ubuntu
      - name: Get Code
        uses: actions/checkout@v4.1.7
      
      # Create a build of Go example on Ubuntu  
      - name: Build ${{ env.FILE_NAME }} for ubuntu-latest
        run: go build ${{ env.FILE_NAME }}.go
      
      # Upload the artifact for Linux
      - name: Upload artifact for linux
        uses: actions/upload-artifact@v4.4.0
        with:
          name: linux
          path: ./${{ env.FILE_NAME }}
      
      # Download the artifact for Linux
      - name: Download artifact for Linux
        uses: actions/download-artifact@v4.1.8
        with:
          name: linux
          path: ./artifacts

      # Execute Run Script
      - name: download-and-run-linux
        run: |
          bash pwd
          chmod +x ./run.sh
          ./run.sh
    
  job2:
    runs-on: ubuntu-latest
    steps:
      # Copy the code of repository and prepare to use on Ubuntu
      - name: Get Code
        uses: actions/checkout@v4.1.7 
      # Create a build of Go example on Windows  
      - name: Build ${{ env.FILE_NAME }} for Windows
        run: GOOS=windows GOARCH=amd64 go build ${{ env.FILE_NAME }}.go  
        
      # Upload the artifact for Windows    
      - name: Upload artifact for windows
        uses: actions/upload-artifact@v4.4.0
        with:
          name: windows
          path: ./${{ env.FILE_NAME }}.exe
    
    # Download the artifact for Windows
      - name: Download artifact for Windows
        uses: actions/download-artifact@v4.1.8
        with:
          name: windows
          path: ./artifacts
      
